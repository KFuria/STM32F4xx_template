
build/firmware.elf:     file format elf32-littlearm


Disassembly of section .text:

080001c4 <deregister_tm_clones>:
 80001c4:	4803      	ldr	r0, [pc, #12]	@ (80001d4 <deregister_tm_clones+0x10>)
 80001c6:	4b04      	ldr	r3, [pc, #16]	@ (80001d8 <deregister_tm_clones+0x14>)
 80001c8:	4283      	cmp	r3, r0
 80001ca:	d002      	beq.n	80001d2 <deregister_tm_clones+0xe>
 80001cc:	4b03      	ldr	r3, [pc, #12]	@ (80001dc <deregister_tm_clones+0x18>)
 80001ce:	b103      	cbz	r3, 80001d2 <deregister_tm_clones+0xe>
 80001d0:	4718      	bx	r3
 80001d2:	4770      	bx	lr
 80001d4:	20000000 	.word	0x20000000
 80001d8:	20000000 	.word	0x20000000
 80001dc:	00000000 	.word	0x00000000

080001e0 <register_tm_clones>:
 80001e0:	4805      	ldr	r0, [pc, #20]	@ (80001f8 <register_tm_clones+0x18>)
 80001e2:	4b06      	ldr	r3, [pc, #24]	@ (80001fc <register_tm_clones+0x1c>)
 80001e4:	1a1b      	subs	r3, r3, r0
 80001e6:	0fd9      	lsrs	r1, r3, #31
 80001e8:	eb01 01a3 	add.w	r1, r1, r3, asr #2
 80001ec:	1049      	asrs	r1, r1, #1
 80001ee:	d002      	beq.n	80001f6 <register_tm_clones+0x16>
 80001f0:	4b03      	ldr	r3, [pc, #12]	@ (8000200 <register_tm_clones+0x20>)
 80001f2:	b103      	cbz	r3, 80001f6 <register_tm_clones+0x16>
 80001f4:	4718      	bx	r3
 80001f6:	4770      	bx	lr
 80001f8:	20000000 	.word	0x20000000
 80001fc:	20000000 	.word	0x20000000
 8000200:	00000000 	.word	0x00000000

08000204 <__do_global_dtors_aux>:
 8000204:	b510      	push	{r4, lr}
 8000206:	4c06      	ldr	r4, [pc, #24]	@ (8000220 <__do_global_dtors_aux+0x1c>)
 8000208:	7823      	ldrb	r3, [r4, #0]
 800020a:	b943      	cbnz	r3, 800021e <__do_global_dtors_aux+0x1a>
 800020c:	f7ff ffda 	bl	80001c4 <deregister_tm_clones>
 8000210:	4b04      	ldr	r3, [pc, #16]	@ (8000224 <__do_global_dtors_aux+0x20>)
 8000212:	b113      	cbz	r3, 800021a <__do_global_dtors_aux+0x16>
 8000214:	4804      	ldr	r0, [pc, #16]	@ (8000228 <__do_global_dtors_aux+0x24>)
 8000216:	f3af 8000 	nop.w
 800021a:	2301      	movs	r3, #1
 800021c:	7023      	strb	r3, [r4, #0]
 800021e:	bd10      	pop	{r4, pc}
 8000220:	20000000 	.word	0x20000000
 8000224:	00000000 	.word	0x00000000
 8000228:	080002f4 	.word	0x080002f4

0800022c <frame_dummy>:
 800022c:	b508      	push	{r3, lr}
 800022e:	4b05      	ldr	r3, [pc, #20]	@ (8000244 <frame_dummy+0x18>)
 8000230:	b11b      	cbz	r3, 800023a <frame_dummy+0xe>
 8000232:	4905      	ldr	r1, [pc, #20]	@ (8000248 <frame_dummy+0x1c>)
 8000234:	4805      	ldr	r0, [pc, #20]	@ (800024c <frame_dummy+0x20>)
 8000236:	f3af 8000 	nop.w
 800023a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800023e:	f7ff bfcf 	b.w	80001e0 <register_tm_clones>
 8000242:	bf00      	nop
 8000244:	00000000 	.word	0x00000000
 8000248:	20000004 	.word	0x20000004
 800024c:	080002f4 	.word	0x080002f4

08000250 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000250:	480d      	ldr	r0, [pc, #52]	@ (8000288 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000252:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000254:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000258:	480c      	ldr	r0, [pc, #48]	@ (800028c <LoopForever+0x6>)
  ldr r1, =_edata
 800025a:	490d      	ldr	r1, [pc, #52]	@ (8000290 <LoopForever+0xa>)
  ldr r2, =_sidata
 800025c:	4a0d      	ldr	r2, [pc, #52]	@ (8000294 <LoopForever+0xe>)
  movs r3, #0
 800025e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000260:	e002      	b.n	8000268 <LoopCopyDataInit>

08000262 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000262:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000264:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000266:	3304      	adds	r3, #4

08000268 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000268:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800026a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800026c:	d3f9      	bcc.n	8000262 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800026e:	4a0a      	ldr	r2, [pc, #40]	@ (8000298 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000270:	4c0a      	ldr	r4, [pc, #40]	@ (800029c <LoopForever+0x16>)
  movs r3, #0
 8000272:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000274:	e001      	b.n	800027a <LoopFillZerobss>

08000276 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000276:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000278:	3204      	adds	r2, #4

0800027a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800027a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800027c:	d3fb      	bcc.n	8000276 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800027e:	f000 f815 	bl	80002ac <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000282:	f000 f80e 	bl	80002a2 <main>

08000286 <LoopForever>:

LoopForever:
  b LoopForever
 8000286:	e7fe      	b.n	8000286 <LoopForever>
  ldr   r0, =_estack
 8000288:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800028c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000290:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000294:	08000314 	.word	0x08000314
  ldr r2, =_sbss
 8000298:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800029c:	2000001c 	.word	0x2000001c

080002a0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002a0:	e7fe      	b.n	80002a0 <ADC_IRQHandler>

080002a2 <main>:
#include <stdint.h>

int main(void)
{
 80002a2:	b480      	push	{r7}
 80002a4:	af00      	add	r7, sp, #0
    /* Loop forever */
	for(;;);
 80002a6:	bf00      	nop
 80002a8:	e7fd      	b.n	80002a6 <main+0x4>
	...

080002ac <__libc_init_array>:
 80002ac:	b570      	push	{r4, r5, r6, lr}
 80002ae:	4d0d      	ldr	r5, [pc, #52]	@ (80002e4 <__libc_init_array+0x38>)
 80002b0:	4c0d      	ldr	r4, [pc, #52]	@ (80002e8 <__libc_init_array+0x3c>)
 80002b2:	1b64      	subs	r4, r4, r5
 80002b4:	10a4      	asrs	r4, r4, #2
 80002b6:	2600      	movs	r6, #0
 80002b8:	42a6      	cmp	r6, r4
 80002ba:	d109      	bne.n	80002d0 <__libc_init_array+0x24>
 80002bc:	4d0b      	ldr	r5, [pc, #44]	@ (80002ec <__libc_init_array+0x40>)
 80002be:	4c0c      	ldr	r4, [pc, #48]	@ (80002f0 <__libc_init_array+0x44>)
 80002c0:	f000 f818 	bl	80002f4 <_init>
 80002c4:	1b64      	subs	r4, r4, r5
 80002c6:	10a4      	asrs	r4, r4, #2
 80002c8:	2600      	movs	r6, #0
 80002ca:	42a6      	cmp	r6, r4
 80002cc:	d105      	bne.n	80002da <__libc_init_array+0x2e>
 80002ce:	bd70      	pop	{r4, r5, r6, pc}
 80002d0:	f855 3b04 	ldr.w	r3, [r5], #4
 80002d4:	4798      	blx	r3
 80002d6:	3601      	adds	r6, #1
 80002d8:	e7ee      	b.n	80002b8 <__libc_init_array+0xc>
 80002da:	f855 3b04 	ldr.w	r3, [r5], #4
 80002de:	4798      	blx	r3
 80002e0:	3601      	adds	r6, #1
 80002e2:	e7f2      	b.n	80002ca <__libc_init_array+0x1e>
 80002e4:	0800030c 	.word	0x0800030c
 80002e8:	0800030c 	.word	0x0800030c
 80002ec:	0800030c 	.word	0x0800030c
 80002f0:	08000310 	.word	0x08000310

080002f4 <_init>:
 80002f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002f6:	bf00      	nop
 80002f8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002fa:	bc08      	pop	{r3}
 80002fc:	469e      	mov	lr, r3
 80002fe:	4770      	bx	lr

08000300 <_fini>:
 8000300:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000302:	bf00      	nop
 8000304:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000306:	bc08      	pop	{r3}
 8000308:	469e      	mov	lr, r3
 800030a:	4770      	bx	lr
